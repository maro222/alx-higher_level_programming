>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)


>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
    ...
    raise TypeError(f"{name} must be an integer")
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
    ...
    raise ValueError(f"{name} must be greater than 0")
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
    ...
    raise ValueError(f"{name} must be greater than 0")
ValueError: distance must be greater than 0

>>> bg.integer_validator()
Traceback (most recent call last):
      ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("distance", -4, 5)
Traceback (most recent call last):
      ...
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> bg.integer_validator("my_int", float('inf'))
Traceback (most recent call last):
    ...
    raise TypeError(f"{name} must be an integer")
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", float('-inf'))
Traceback (most recent call last):
    ...
    raise TypeError(f"{name} must be an integer")
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", float('nan'))
Traceback (most recent call last):
    ...
    raise TypeError(f"{name} must be an integer")
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", 0.5)
Traceback (most recent call last):
     ...
    raise TypeError(f"{name} must be an integer")
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", -5.5)
Traceback (most recent call last):
     ...
    raise TypeError(f"{name} must be an integer")
TypeError: my_int must be an integer

>>> bg.area()
Traceback (most recent call last):
     ...
    raise Exception("area() is not implemented")
Exception: area() is not implemented

>>> bg.area(1)
Traceback (most recent call last):
    ...
TypeError: area() takes 1 positional argument but 2 were given

>>> bg.area([1,2,3])
Traceback (most recent call last):
     ...
TypeError: area() takes 1 positional argument but 2 were given

>>> bg.integer_validator("name", [])
Traceback (most recent call last):
     ...
    raise TypeError(f"{name} must be an integer")
TypeError: name must be an integer

>>> bg.integer_validator("name", None)
Traceback (most recent call last):
    ...
    raise TypeError(f"{name} must be an integer")
TypeError: name must be an integer

>>> bg.integer_validator("name", (1, ))
Traceback (most recent call last):
    ...
    raise TypeError(f"{name} must be an integer")
TypeError: name must be an integer

>>> bg.integer_validator("name", {1, 3})
Traceback (most recent call last):
    ...
    raise TypeError(f"{name} must be an integer")
TypeError: name must be an integer

>>> bg.area(5,5)
Traceback (most recent call last):
    ...
TypeError: area() takes 1 positional argument but 3 were given

>>> bg.integer_validator("name")
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'
